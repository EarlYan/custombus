<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	">
  
    <!--引入数据库的配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" />
    
    <!--
    <cache:annotation-driven/>
    
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcacheManager"/>
    <bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="WEB-INF/classes/ehcache.xml"/>
     -->
    
    <!--com.ibaby下面的类均被注入 -->
    <!-- use-default-filters="false" 只扫描指定的注解 -->
    <context:component-scan base-package="com.dzbs" >   
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />    
    </context:component-scan>  
    
    <!--切面编程需要的配置 -->
    <!-- 激活自动代理功能 -->
	<!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->
	<!--aop编程，切面 -->
	<!-- <bean id="myInterceptor" class="com.demo.web.aspect.ServiceAspect"/>-->  
    
    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
       <property name="contentType" value="text/html"/>        
       <property name="prefix" value="/WEB-INF/views/"/>
       <property name="suffix" value=".jsp"/>
    </bean>
    
    <mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes" value="application/json;charset=UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<mvc:view-controller path="/" view-name="redirect:/web/index" />
    
   	<!-- <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${database.driver}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.user}" />
		<property name="password" value="${database.password}" />
	</bean> -->


	<!--文件上传需要的配置-->
	<bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	     <property name="maxUploadSize" value="102400000"></property>
	 </bean>
	 
	<!--定时任务配置-->
    <!-- <bean id="quartzJob" class="com.dzbs.www.quartz.QuartzJob"></bean> -->
    <!-- 定义调用对象和调用对象的方法 -->
    <!-- <bean id="jobtask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> -->
        <!-- 调用的类 -->
        <!-- <property name="targetObject">
            <ref bean="quartzJob"/>
        </property> -->
        <!-- 调用类中的方法 -->
        <!-- <property name="targetMethod">
            <value>work</value>
        </property> -->
    <!-- </bean> -->
    <!-- 定义触发时间 -->
    <!-- <bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail">
            <ref bean="jobtask"/>
        </property> -->
        <!-- cron表达式 -->
        <!-- <property name="cronExpression">
            <value>0 * * * * ?</value>
        </property>
    </bean> -->
    <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序  -->
    <!-- <bean id="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="doTime"/>
            </list>
        </property>
    </bean> -->
    
</beans>